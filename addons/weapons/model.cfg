class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};

class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class CFP_Weapon: Default
	{
		isDiscrete = 1;
		skeletonInherit = "Default";
		skeletonBones[]=
		{
			"magazine","",
			"trigger","",
			"hide_not_selected","",
			"unhide_not_selected","",
						
			// Bipod Skeleton
			"bipod_legs",		"",
			"bipod_leg_L",		"bipod_legs",
			"leg_L",			"bipod_leg_L",
			"bipod_leg_R",		"bipod_legs",
			"leg_R",			"bipod_leg_R",
			
			// Simple forward-folding bipod bones
			"bipod_simple_forward", "",
			
			// Simple backward-folding bipod bones
			"bipod_simple_backward", ""
		};
	};
	class CFP_Rifle: CFP_Weapon
	{
		skeletonInherit = "CFP_Weapon";
		skeletonBones[]=
		{
			"bolt","",
			"bullet_cover","",
			"aimpoint_cover","",
			"aimpoint_cover02","",
			"charging_handle","",
			"misc_cover","",
			"rear_sight","",
			"front_sight","",
			"rear_sight_hide","",
			"front_sight_hide","",
			"rail_adapter","",
			"zasleh","",
			"muzzleFlash","",
			"muzzleFlashNoROT","",
			"gl_sight_1","",
			"gl_sight_2","",
			"hide_if_suppressed","",
			"side_rail_cover","",
			"OP",""
		};
	};
};

class CfgModels
{
	class Default
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};
	class CFP_Weapon: Default
	{
		sections[]=
		{
			"zasleh","muzzleFlash","muzzleFlashNOROT","rear_sight","front_sight","rail_adapter","hide_not_selected","unhide_not_selected","side_rail_cover"
		};
		skeletonName = "CFP_Weapon";
		class Animations
		{
			class hide_when_not_selected
			{
				type = "hide";
				source = "isSelected";
				selection = "hide_not_selected";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 1;
			};
			class unhide_when_not_selected
			{
				type = "hide";
				source = "isSelected";
				selection = "unhide_not_selected";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.5;
				unhideValue = -1;
			};
			class muzzleFlashZaslehROT
			{
				type = "rotationX";
				source = "ammoRandom";//use ammo count as phase for animation
				sourceAddress = "loop";//loop when phase out of bounds
				selection = "zasleh";//selection we want to rotate
				axis = "";//no own axis - center of rotation is computed from selection
				centerFirstVertex = 1;//use first vertex of selection as center of rotation
				minValue = 0;
				maxValue = 4;//rotation angle will be 360/4 = 90 degrees
				angle0 = "rad 0";
				angle1 = "rad 360";
			};
			class muzzleFlashROT
			{
				type = "rotationX";
				source = "ammoRandom";//use ammo count as phase for animation
				sourceAddress = "loop";//loop when phase out of bounds
				selection = "muzzleFlash";//selection we want to rotate
				axis = "";//no own axis - center of rotation is computed from selection
				centerFirstVertex = 1;//use first vertex of selection as center of rotation
				minValue = 0;
				maxValue = 4;//rotation angle will be 360/4 = 90 degrees
				angle0 = "rad 0";
				angle1 = "rad 360";
			};
			class rail_adapter_hide
			{
				type = "hide";
				source = "hasOptics";
				selection = "rail_adapter";
				minValue = 0;
				maxValue = 1;
				hideValue = -1;
				unhideValue = 0.2;
			};
			class if_suppressed
			{
				type = "hide";
				source = "hasSuppressor";
				selection = "hide_if_suppressed";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.5;
			};
			class zaslehROT
			{
				type = "rotation";
				source = "clockMinute";
				sourceAddress = "loop";
				selection = "test";
				begin = "usti hlavne";
				end = "konec hlavne";
				memory = 1;
				minValue = 0.0166665;
				maxValue = 0.016666666666666666666666666666667;
				angle0 = "rad 0";
				angle1 = "rad 360";
			};
			class magazine_hide
			{
				type = "hide";
				source = "reloadMagazine";
				sourceAddress = "mirror";
				selection = "magazine";
				minValue = 0;
				maxValue = 0.4;
				hideValue = 0.5;
			};
			class reload_ammobelt_hide: magazine_hide
			{
				selection = "ammo_belt";
			};
			class reload_ammobelt_bottom_hide: magazine_hide
			{
				selection = "ammo_belt_bottom";
			};
			class ammobelt_hide: magazine_hide
			{
				source = "isEmpty";
				selection = "ammo_belt";
				minValue = 0;
				maxValue = 1;
				hideValue = 1;
			};
			class ammobelt_bottom_hide: ammobelt_hide
			{
				selection = "ammo_belt_bottom";
			};
			class side_rail_cover
			{
				type = "hide";
				source = "hasAccessory";
				selection = "side_rail_cover";
				memory = "0";
				hideValue = 1;
			};
			class frontsight_optic
			{
				type = "rotation";
				source = "hasOptics";
				selection = "front_sight";
				axis = "front_sight_axis";
				animPeriod = 0;
				memory = "1";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = 1.57079633;
			};
			class backsight_optic
			{
				type = "rotation";
				source = "hasOptics";
				selection = "rear_sight";
				axis = "rear_sight_axis";
				animPeriod = 0;
				memory = "1";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = 1.57079633;
			};
			class front_sight_hide
			{
				type = "hide";
				source = "hasOptics";
				selection = "front_sight_hide";
				memory = 0;
				hideValue = 0.5;
			};
			class rear_sight_hide: front_sight_hide
			{
				selection = "rear_sight_hide";
			};
			class OP_ROT
			{
				type = "rotation";
				source = "zeroing2";// use second muzzle zeroing for rotation
				sourceAddress = "loop";// loop when phase out of bounds
				selection = "OP";// selection we want to rotate
				axis = "OP_axis";// has its own axis
				minValue = 0;
				maxValue = 3;
				angle0 = "rad 0";
				angle1 = "rad 65";
			};
			class trigger
			{
				type = "rotation";
				source = "reload";
				sourceAddress = "clamp";
				selection = "trigger";
				axis = "trigger_axis";
				minValue = 0;
				maxValue = "1";
				angle0 = "0";
				angle1 = "rad -30";
			};
			
			// Simple forward-folding bipod
			class simple_forward_bipod 
			{
				type = "rotation";
				source = "bipod";
				sourceAddress = "clamp";
				selection = "bipod_simple_forward";
				axis      = "bipod_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = "(rad 0)";
				angle1 = "(rad -90)";
				memory = 1;
			};
			
			// Simple backward-folding bipod
			class simple_backward_bipod : simple_forward_bipod
			{
				selection = "bipod_simple_backward";
				angle1 = "(rad 90)";
			};
			// #bipodz
			/*class leg_L
			{
				type			= rotation;
				source			= bipod_legs;
				sourceAddress	= clamp;
				selection		= "bipod_leg_L";
				axis			= "bipod_leg_L_axis";
				minValue		= 0;
				maxValue		= 1;
				angle0			= (rad -5);
				angle1			= (rad 18);
			};

			class leg_R: leg_L
			{
				selection		= "bipod_leg_R";
				axis			= "bipod_leg_R_axis";
			};
			class legs: leg_L
			{
				selection		= "bipod_legs";
				axis			= "bipod_legs_axis";
				angle0			= (rad 0);
				angle1			= (rad 90);
			};
			class Leg_L_move
			{
				type			= translation;
				source			= bipod_legs_length;
				selection		= "Leg_L";
				axis			= "Leg_L_axis";
				memory			= 1;
				minValue		= 0;
				maxValue		= 1;
				offset0			= 0;
				offset1			= 10;
			};	
			class Leg_R_move: Leg_L_move
			{
				selection		= "Leg_R";
				axis			= "Leg_R_axis";
			};	*/
		};
	};
	class CFP_Rifle: CFP_Weapon
	{
		sectionsInherit = "CFP_Weapon";
		skeletonName = "CFP_Rifle";
		class Animations: Animations
		{
			class magazine_hide:magazine_hide
			{
				sourceAddress = "mirror";
				minValue = 0;
				maxValue = 0.56;
				hideValue = 0.36;
			};
			class bolt_empty
			{
				type = "translation";
				source = "isEmptyNoReload";
				selection = "bolt";
				axis = "bolt_axis";
				memory = 1;
				minValue = 0;
				maxValue = 0.5;
				offset0 = 0;
				offset1 = 0.5;
			};
			class bullet_cover
			{
				type = "rotation";
				source = "reload";
				sourceAddress = "mirror";
				selection = "bullet_cover";
				axis = "bullet_cover_axis";
				memory = 1;
				minValue = 0;
				maxValue = 0.5;
				angle0 = 0;
				angle1=-0.4;
			};
			class bolt_fire_begin
			{
				type = "translation";
				source = "reload";
				selection = "bolt";
				axis = "bolt_axis";
				memory = 1;
				minValue = 0;
				maxValue = 0.3;
				offset0 = 0;
				offset1 = 0.5;
			};
			class bolt_fire_end:bolt_fire_begin
			{
				minValue = 0.5;
				maxValue = 1;
				offset0 = 0;
				offset1=-0.5;
			};
			class bolt_reload_begin
			{
				type = "translation";
				source = "reloadMagazine";
				selection = "bolt";
				axis = "bolt_axis";
				memory = 1;
				minValue = 0.1;
				maxValue = 0.15;
				offset0 = 0;
				offset1 = 0.5;
			};
			class bolt_reload_end:bolt_reload_begin
			{
				minValue = 0.98;
				maxValue = 1;
				offset0 = 0;
				offset1=-0.5;
			};
			class gl_sight_1_rot
			{
				type = "rotationZ";
				source = "weaponMuzzle";
				memory = 1;
				selection = "gl_sight_1";
				animPeriod = 0;
				axis = "gl_sight_1_axis";
				minValue = 0;
				maxValue = 1;
				minPhase = 0;
				maxPhase = 1;
				angle0 = 0;
				angle1 = 0.853116938374828296;//1.31248759749973584;
			};
			class gl_sight_2_rot
			{
				type = "rotationZ";
				source = "weaponMuzzle";
				memory = 1;
				selection = "gl_sight_2";
				animPeriod = 0;
				axis = "gl_sight_2_axis";
				minValue = 0;
				maxValue = 1;
				minPhase = 0;
				maxPhase = 1;
				angle0 = 0;
				angle1=-1.57079633;
			};
		};
	};
};
	